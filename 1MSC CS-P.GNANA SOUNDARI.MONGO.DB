Microsoft Windows [Version 10.0.22631.4037]
(c) Microsoft Corporation. All rights reserved.

C:\Users\user\Downloads\mongosh-2.3.0-win32-x64\mongosh-2.3.0-win32-x64\bin>mongosh

Current Mongosh Log ID: 66d9b64c4cf5d1f56a2710bb
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.0
Using MongoDB:          7.0.14
Using Mongosh:          2.3.0

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-09-05T17:51:50.574+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

1)Create DataBase:

test> use student
switched to db student

2)Insert One:

student> db.student.insertOne({id:101,name:"sujitha"})
{
  acknowledged: true,
  insertedId: ObjectId('66d9b66e4cf5d1f56a2710bc')
}

student> db.student.insertOne({id:102,name:"Vishal"})
{
  acknowledged: true,
  insertedId: ObjectId('66d9b6794cf5d1f56a2710bd')
}

student> db.student.insertOne({id:103,name:"gokul"})
{
  acknowledged: true,
  insertedId: ObjectId('66d9b6844cf5d1f56a2710be')
}

student> db.student.insertOne({id:104,name:"Sabai"})
{
  acknowledged: true,
  insertedId: ObjectId('66d9b68e4cf5d1f56a2710bf')
}

student> db.student.insertOne({id:105,name:"latha"})
{
  acknowledged: true,
  insertedId: ObjectId('66d9b6984cf5d1f56a2710c0')
}

3)db Collection:

student> db.student.find()

[
  {
    _id: ObjectId('66d9b66e4cf5d1f56a2710bc'),id: 101,name: 'sujitha'},
  { _id: ObjectId('66d9b6794cf5d1f56a2710bd'),id: 102,name: 'Vishal'},
  { _id: ObjectId('66d9b6844cf5d1f56a2710be'), id: 103, name: 'gokul' },
  { _id: ObjectId('66d9b68e4cf5d1f56a2710bf'), id: 104, name: 'Sabai' },
  { _id: ObjectId('66d9b6984cf5d1f56a2710c0'), id: 105, name: 'latha' }
]

4)Update One:

student> db.student.updateOne({id:105,name:"latha"},{$set:{name:"parkavi"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}

student> db.student.find()

[
  { _id: ObjectId('66d9b66e4cf5d1f56a2710bc'),id: 101,name: 'sujitha'},
  {_id: ObjectId('66d9b6794cf5d1f56a2710bd'),id: 102,name: 'Vishal'},
  { _id: ObjectId('66d9b6844cf5d1f56a2710be'), id: 103, name: 'gokul' },
  { _id: ObjectId('66d9b68e4cf5d1f56a2710bf'), id: 104, name: 'Sabai' },
  { _id: ObjectId('66d9b6984cf5d1f56a2710c0'), id: 105, name: 'parkavi' }
]

5)Insert Many:

student> db.student.insertMany([{id:106,name:"mohana"}])

{
  acknowledged: true,
  insertedIds: { '0': ObjectId('66d9b8084cf5d1f56a2710c1') }
}

student> db.student.find()

[
  {_id: ObjectId('66d9b66e4cf5d1f56a2710bc'),id: 101,name: 'sujitha'},
  {_id: ObjectId('66d9b6794cf5d1f56a2710bd'),id: 102,name: 'vishal'},
  { _id: ObjectId('66d9b6844cf5d1f56a2710be'), id: 103, name: 'gokul' },
  { _id: ObjectId('66d9b68e4cf5d1f56a2710bf'), id: 104, name: 'Sabai' },
  { _id: ObjectId('66d9b6984cf5d1f56a2710c0'), id: 105, name: 'parkavi' },
  { _id: ObjectId('66d9b8084cf5d1f56a2710c1'),id: 106,name: 'mohana'}
]

6)UpdateMany:

student> db.student.updateMany({id:106,name:"mohana"},{$set:{name:"jeni"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

student> db.student.find()

[
  {_id: ObjectId('66d9b66e4cf5d1f56a2710bc'),id: 101,name: 'sujitha'},
  {_id: ObjectId('66d9b6794cf5d1f56a2710bd'),id: 102,name: 'Vishal'},
  { _id: ObjectId('66d9b6844cf5d1f56a2710be'), id: 103, name: 'gokul' },
  { _id: ObjectId('66d9b68e4cf5d1f56a2710bf'), id: 104, name: 'Sabai' },
  { _id: ObjectId('66d9b6984cf5d1f56a2710c0'), id: 105, name: 'parkavi' },
  {_id: ObjectId('66d9b8084cf5d1f56a2710c1'),id: 106,name: 'jeni'}
]

7)Delete One:

student> db.student.deleteOne({id:106,name:"jeni"})

{ 
acknowledged: true, deletedCount: 0
 }

student> db.student.find()

[
  {_id: ObjectId('66d9b66e4cf5d1f56a2710bc'),id: 101,name: 'sujitha'},
  {_id: ObjectId('66d9b6794cf5d1f56a2710bd'),id: 102,name: 'Vishal'},
  { _id: ObjectId('66d9b6844cf5d1f56a2710be'), id: 103, name: 'gokul' },
  { _id: ObjectId('66d9b68e4cf5d1f56a2710bf'), id: 104, name: 'Sabai' },
  { _id: ObjectId('66d9b6984cf5d1f56a2710c0'), id: 105, name: 'parkavi' },
]

8) DeleteMany:

student> db.student.deleteMany({id:105,name:"parkavi"})

{ acknowledged: true, deletedCount: 1 }

student> db.student.find()

[
  {_id: ObjectId('66d9b66e4cf5d1f56a2710bc'),id: 101,name: 'sujitha'},
  {_id: ObjectId('66d9b6794cf5d1f56a2710bd'),id: 102,name: 'Vishal'},
  { _id: ObjectId('66d9b6844cf5d1f56a2710be'), id: 103, name: 'gokul' },
  { _id: ObjectId('66d9b68e4cf5d1f56a2710bf'), id: 104, name: 'Sabai' }
]

9)Limit:

student> db.student.find().sort({name:1}).limit(3)

[
  {_id: ObjectId('66d9b66e4cf5d1f56a2710bc'),id: 101,name: 'sujitha'},
  {_id: ObjectId('66d9b6794cf5d1f56a2710bd'),id: 102,name: 'Vishal'},
  { _id: ObjectId('66d9b6844cf5d1f56a2710be'), id: 103, name: 'gokul' },
]

10)Skip:

student> db.student.find().skip(2)

[
  { _id: ObjectId('66d9b6844cf5d1f56a2710be'), id: 103, name: 'gokul' },
  { _id: ObjectId('66d9b68e4cf5d1f56a2710bf'), id: 104, name: 'Sabai' }
]

11)Greaterthen:

student> db.student.findOne({id:{$gt:103}})

{ _id: ObjectId('66d9b68e4cf5d1f56a2710bf'), id: 104, name: 'Sabai' }

12)Lessthen:

student> db.student.findOne({id:{$lt:103}})

{ _id: ObjectId('66d9b66e4cf5d1f56a2710bc'),id: 101,name: 'sujitha'},
{_id: ObjectId('66d9b6794cf5d1f56a2710bd'),id: 102,name: 'Vishal'}

13)Greater than or equal:

student> db.student.findOne({id:{$gte:103}})

{ _id: ObjectId('66d9b6844cf5d1f56a2710be'), id: 103, name: 'gokul' },
{ _id: ObjectId('66d9b68e4cf5d1f56a2710bf'), id: 104, name: 'Sabai' }

14)Less than or equal:

student> db.student.findOne({id:{$lte:103}})

{_id: ObjectId('66d9b66e4cf5d1f56a2710bc'),id: 101,name: 'sujitha'},
{_id: ObjectId('66d9b6794cf5d1f56a2710bd'),id: 102,name: 'Vishal'},
{ _id: ObjectId('66d9b6844cf5d1f56a2710be'), id: 103, name: 'gokul' }





